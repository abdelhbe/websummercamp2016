
log_format proxy '$remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"'
                 '"$http_host"';

# Redirect http to https, whatever the hostname in use
server {
  listen *:80;

  access_log /var/log/nginx/http-access.log proxy;

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen *:443 ssl;

  access_log /var/log/nginx/https-access.log proxy;

  ssl_certificate /etc/nginx/ssl/wildcard.deploy.websc.crt;
  ssl_certificate_key /etc/nginx/ssl/wildcard.deploy.websc.key;

  # add Strict-Transport-Security to prevent man in the middle attacks
  add_header Strict-Transport-Security "max-age=31536000";

  # this value is rather arbitrary, but should be bigger than the limit set in ezpublish class definition and php.ini
  client_max_body_size 10m;

  location / {
      proxy_pass            http://varnish;
      # in case you want to bypass varnish and hit directly apache:
      #proxy_pass            http://web;
      proxy_read_timeout    90;
      proxy_connect_timeout 90;
      proxy_redirect        off;

      proxy_set_header      X-Real-IP $remote_addr;
      # do not allow end users to give us a value for x_forwarded_for - we are the 1st proxy in the chain
      #proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-For $remote_addr;
      proxy_set_header      X-Forwarded-Proto https;
      proxy_set_header      X-Forwarded-Port 443;
      proxy_set_header      Host $host;

      # are these needed at all to avid caching in nginx? (we cache in varnish...)
      #proxy_no_cache        1;
      #proxy_cache_bypass    1;
  }
}
